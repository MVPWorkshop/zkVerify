name: Build Docker Image

on:
  workflow_dispatch:
    inputs:
      chain:
        description: "Solo or relay"
        required: true
        type: string
  workflow_call:
    inputs:
      chain:
        description: "Solo or relay"
        required: true
        type: string
env:
  DOCKER_HUB_ORG: horizenlabs
  DOCKER_IMAGE_BUILD_NAME: ${{ vars.DOCKER_IMAGE_BUILD_NAME }}

jobs:
  build:
    runs-on:
      group: ${{ vars.RUNNER_GROUP }}
    name: Build Docker image
    outputs:
      artifact_name: ${{ steps.create-tar-file.outputs.artifact_name }}
  
    steps:
      - name: Checkout repository
        if: ${{ !env.ACT }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git_ref }}
          fetch-depth: 0

      - name: Use local if act
        if: ${{ env.ACT }}
        uses: actions/checkout@v4

      - name: Build docker image
        run: |
          if [[ "${{ inputs.chain }}" == "solo" ]]; then
            docker build --build-arg PROFILE=production \
              --build-arg FEATURES=metadata-hash \
              -f "docker/dockerfiles/zkv-node.Dockerfile" \
              -t "${DOCKER_HUB_ORG}/${DOCKER_IMAGE_BUILD_NAME}-solo" .
            echo "DOCKER_IMAGE_NAME=${DOCKER_HUB_ORG}/${DOCKER_IMAGE_BUILD_NAME}-solo" >> $GITHUB_ENV
          elif [[ "${{ inputs.chain }}" == "relay" ]]; then
            docker build --build-arg PROFILE=production \
              --build-arg FEATURES=metadata-hash \
              -f "docker/dockerfiles/zkv-relay.Dockerfile" \
              -t "${DOCKER_HUB_ORG}/${DOCKER_IMAGE_BUILD_NAME}-relay" .
            echo "DOCKER_IMAGE_NAME=${DOCKER_HUB_ORG}/${DOCKER_IMAGE_BUILD_NAME}-relay" >> $GITHUB_ENV
          fi
      
      - name: Save the Docker image as a tarball
        id: create-tar-file
        run: |
          ARTIFACT_NAME="${DOCKER_IMAGE_BUILD_NAME}-${{ inputs.chain }}"
          TAR_FILE="${{github.workspace}}/${ARTIFACT_NAME}.tar"

          echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
          echo "TAR_FILE=$TAR_FILE" >> $GITHUB_ENV

          docker save "${DOCKER_IMAGE_NAME}" -o "${TAR_FILE}"

      - name: Upload Docker Image Artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.create-tar-file.outputs.artifact_name }}
          path: ${{ env.TAR_FILE }}
          if-no-files-found: error
          retention-days: 1
          compression-level: 0
          overwrite: true
